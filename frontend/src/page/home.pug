extends ../layout/main-layout.pug

block content
    div
        span
            h1 Good you are home again.
            h1 #{userLoggedIn.firstName}
            div(style='display: flex;')
                .profileimg.col-1
                    img(src=userLoggedIn.picture, alt="ujwalpic", style='height: min-content;')
                .textarea.col-11
                    input#exampleTextBox.form-control(type='text', placeholder='Enter text')
            button#postButton.btn.btn-primary(type='button', disabled='') Post
        #responseContainer
        script.
            document.addEventListener('DOMContentLoaded', async function () {
                console.log('DOMContentLoaded event triggered');

                // Your existing event listeners and fetch logic here
                const exampleTextBox = document.getElementById('exampleTextBox');
                const postButton = document.getElementById('postButton');
                let responseContainer = document.getElementById('responseContainer');

                exampleTextBox.addEventListener('input', function () {
                    console.log('Input event triggered');
                    postButton.disabled = this.value.trim() === ''; // Enable button if there's text in the input
                });

                postButton.addEventListener('click', async function () {
                    console.log('Post button clicked');
                    const textContent = exampleTextBox.value.trim();
                    // Check if there is content before making the POST request
                    if (textContent) {
                        console.log('Sending POST request...');
                        // Continue with your fetch logic here
                        try {
                            const response = await fetch('/api/posts', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ content: textContent }),
                            });

                            const data = await response.json();
                            console.log('Post successful:', data);

                            // Check if the response status is 200 or 201
                            if (response.status === 200 || response.status === 201) {
                                // Create HTML elements for success message and prepend to responseContainer
                                const successMessage = `<div post-id=${data.post._id}>
                                                            <img src=${data.post.picture} alt="ujwal pic">
                                                            <p style="color: green;"> ${data.post.content}</p>
                                                            <p style="color: green;"> ${data.post.username}</p>
                                                            <p style="color: green;"> ${data.post.createdAt}</p>
                                                            <button class="comment-btn" data-post-id=${data.post._id}><i class="fas fa-comment"></i></button>
                                                            <button class="retweet-btn" data-post-id=${data.post._id}><i class="fas fa-retweet"></i></button>
                                                            <button class="heart-btn" data-post-id=${data.post._id}><i class="fas fa-heart"></i></button>
                                                            <div class="likes-count">Likes: 0</div>
                                                        <div>
                                                        <hr>`
                                responseContainer.insertAdjacentHTML('afterbegin', successMessage);
                            }
                        } catch (error) {
                            console.error('Error posting:', error);
                            // Handle the error as needed
                        }
                    }
                });

                // Fetch data from the '/api/all/posts' endpoint
                try {
                    const response = await fetch('/api/all/posts');
                    const data = await response.json();

                    // Check if the response status is 200
                    if (response.status === 200) {
                        // Iterate over the data array and append each post to the responseContainer
                        data.forEach(post => {
                            const postElement = document.createElement('div');
                            postElement.innerHTML = `<div post-id=${post._id}>
                                                        <img src=${post.postedBy.picture} alt="ujwal pic">
                                                        <p style="color: green;"> ${post.content}</p>
                                                        <p style="color: green;"> ${post.postedBy.username}</p>
                                                        <p style="color: green;"> ${post.createdAt}</p>
                                                        <button class="comment-btn" data-post-id=${post._id}><i class="fas fa-comment"></i></button>
                                                        <button class="retweet-btn" data-post-id=${post._id}><i class="fas fa-retweet"></i></button>
                                                        <button class="heart-btn" data-post-id=${post._id}><i class="fas fa-heart"></i></button>
                                                        <div class="likes-count" id="likes-count-${post._id}">Likes: ${post.likes.length || 0}</div>
                                                    </div>
                                                    <hr>`;

                            // Add event listeners to the buttons in the postElement
                            postElement.querySelectorAll('.comment-btn').forEach(button => {
                                button.addEventListener('click', async function () {
                                    // Get the post-id attribute value
                                    var postId = this.getAttribute('data-post-id');

                                    // Display the post-id in an alert
                                    alert('Comment Post ID: ' + postId);

                                    try {
                                        const response = await fetch(`/api/posts/${postId}`, {
                                            method: 'PUT',
                                            headers: {
                                                'Content-Type': 'application/json',
                                                // Add any additional headers as needed
                                            },
                                            // Add any additional options for the request as needed
                                        });

                                        const data = await response.json();

                                        // Handle the response data as needed
                                        console.log('Retweet Button Clicked (PUT):', data);
                                    } catch (error) {
                                        console.error('Error updating post:', error);
                                        // Handle the error as needed
                                    }
                                });
                            });

                            postElement.querySelectorAll('.retweet-btn').forEach(button => {
                                button.addEventListener('click', async function () {
                                    // Get the post-id attribute value
                                    var postId = this.getAttribute('data-post-id');

                                    // Display the post-id in an alert
                                    alert('Retweet Post ID: ' + postId);
                                    try {
                                        const response = await fetch('/api/posts', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json',
                                            },
                                            body: JSON.stringify({ content: textContent }),
                                        });

                                        const data = await response.json();

                                        // Handle the response data as needed
                                        console.log('Retweet Button Clicked (Post):', data);
                                        if (likesCountElement) {
                                            likesCountElement.textContent = `Likes: ${data.likesCount !== null ? data.likesCount : 0}`;
                                        }
                                        else {
                                            console.error('Likes count element not found');
                                        }
                                    } catch (error) {
                                        console.error('Error updating post:', error);
                                        // Handle the error as needed
                                    }
                                });
                            });
                            
                            postElement.querySelectorAll('.heart-btn').forEach(button => {
                                button.addEventListener('click', async function () {
                                    // Get the post-id attribute value
                                    var postId = this.getAttribute('data-post-id');
                                    const likesCountElement = document.getElementById(`likes-count-${postId}`);
                                    // Display the post-id in an alert
                                    alert('Heart Post ID: ' + postId);
                                    try {
                                        const response = await fetch(`/api/posts/like/${postId}`, {
                                            method: 'PUT',
                                            headers: {
                                                'Content-Type': 'application/json',
                                                // Add any additional headers as needed
                                            },
                                            // Add any additional options for the request as needed
                                        });

                                        const data = await response.json();

                                        // Handle the response data as needed
                                        console.log('Heart Button Clicked (PUT):', data);
                                        if (likesCountElement) {
                                            likesCountElement.textContent = `Likes: ${data.likesCount !== null ? data.likesCount : 0}`;
                                        }
                                        else {
                                            console.error('Likes count element not found');
                                        }
                                    } catch (error) {
                                        console.error('Error updating post:', error);
                                        // Handle the error as needed
                                    }
                                });
                            });

                            responseContainer.insertBefore(postElement, responseContainer.firstChild);
                        });
                    }
                }
                catch (error) {
                    console.error('Error fetching posts:', error);
                    // Handle the error as needed
                }
            });

        style.
            .profileimg {
                min-width: 75px; /* Fixed width for the column */
                min-height: 75px; /* Minimum height for the column */
            }
            .profileimg img {
                width: 100%; /* Make the image take 100% of the column width */
                height: 100%; /* Make the image take 100% of the column height */
                object-fit: cover; /* Maintain aspect ratio and cover the container */
            }
            #responseContainer {
                min-width: 75px; /* Fixed width for the column */
                min-height: 75px; /* Minimum height for the column */
            }
            #responseContainer img {
                width: 100%; /* Make the image take 100% of the column width */
                height: 100%; /* Make the image take 100% of the column height */
                object-fit: cover; /* Maintain aspect ratio and cover the container */
            }
